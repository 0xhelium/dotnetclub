
use namespace='System'
use namespace='System.IO'
use import='Environment'

default currentDir = '${Directory.GetCurrentDirectory()}'


var VERSION='0.1'
var FULL_VERSION='0.1'
var AUTHORS='Jijie Chen'

use-standard-lifecycle
k-standard-goals



#sakedefault description='Replacement to the default build target. To build the solution, use Sake build-all'
  log info='Please enter your target name.'
  log info='To show all available targets, use Sake help'
  -Environment.Exit(0);

#build-all .default
div#help .targets

#native-compile target='compile'
  log warn='Default native-compile is overridden'

#run-gulp .restore-npm-modules .restore-bower-components target='initialize'
  var gulpDirs = '${GetDirectoriesContaining(Directory.GetCurrentDirectory(), "gulpfile.js")}'
  gulp each='var gulpDir in gulpDirs'


#publish
  var gulpDirs = '${GetDirectoriesContaining(Directory.GetCurrentDirectory(), "gulpfile.js")}'
  gulp each='var gulpDir in gulpDirs' gulpCommand='publish'
  publish-macros
  @{
  	CallTarget("clean");

    var projectFiles = Files.Include("src/**/project.json").ToList();

    foreach(var projectFile in projectFiles){
    	var projectFolder = Path.GetDirectoryName(Path.GetFullPath(projectFile));

    	try{
    		ExcludeWwrootFiles(projectFile);
    	}
    	catch(Exception ex){
    		Console.WriteLine("Error occured: {0}", ex.Message);
    		Console.WriteLine(ex.StackTrace);

    		RestoreExcludedWwwrootFiles(projectFile);
    		continue;
    	}

		Console.WriteLine("Generating package for {0}", projectFolder);

    	DnuAt("publish --no-source", projectFolder);

    	RestoreExcludedWwwrootFiles(projectFile);

    	Console.WriteLine("Package generated at {0}", Path.Combine(projectFolder, "bin", "output"));
    }
  }


@{
	DefaultTarget = "sakedefault";
}
